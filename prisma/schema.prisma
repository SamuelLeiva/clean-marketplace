generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // esta variable se define en tu archivo .env
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  name      String?
  password  String // Store hashed passwords, of course
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  cart      Cart? // A user can have one active cart
}

model Category {
  id       String    @id @default(uuid())
  name     String    @unique
  description String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  products Product[]
}

model Product {
  id         String   @id @default(uuid())
  name       String
  price      Float
  description String
  stock       Int       @default(0)
  imageUrl    String?

  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  cartItems   CartItem[]
}



model Cart {
  id        String    @id @default(uuid())
  userId    String    @unique // Un carrito activo por usuario
  user      User      @relation(fields: [userId], references: [id])
  status    String    @default("active") // "active", "abandoned", "converted"
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  cartItems CartItem[]
}

model CartItem {
  id                    String    @id @default(uuid())
  cartId                String
  cart                  Cart      @relation(fields: [cartId], references: [id], onDelete: Cascade) // Si se borra el carrito, se borran sus ítems
  productId             String
  product               Product   @relation(fields: [productId], references: [id])
  quantity              Int
  priceAtTimeOfAddition Float     // Precio del producto cuando se añadió al carrito
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  @@unique([cartId, productId]) // Asegura que solo haya un tipo de producto por carrito
}